version: "3.7"
services:
  zoo:
    image: zookeeper:3.4.9
    hostname: zoo
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo:2888:3888
    networks:
      - example
  kafka:
    # Kafka version 2.5.0
    image: confluentinc/cp-kafka:5.5.0
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zoo
    networks:
      - example

  kafka-producer:
    build:
      dockerfile: $PWD/Dockerfile
      context: ..
    command:
      - "/bin/sh"
      - "-c"
      - "/go/bin/main produce"
    depends_on:
      - kafka
    networks:
      - example
  kafka-consumer:
    build:
      dockerfile: $PWD/Dockerfile
      context: ..
    command:
      - "/bin/sh"
      - "-c"
      - "/go/bin/main consume"
    depends_on:
      - kafka
    networks:
      - example
networks:
  example:

